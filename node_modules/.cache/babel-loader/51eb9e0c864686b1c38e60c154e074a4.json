{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport function request(_x, _x2, _x3) {\n  return _request.apply(this, arguments);\n}\n\nfunction _request() {\n  _request = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(url, payload, method) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return doRequest(url, payload, token, method);\n\n          case 2:\n            response = _context.sent;\n            return _context.abrupt(\"return\", unpack(response));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n  return _request.apply(this, arguments);\n}\n\nfunction doRequest(_x4, _x5, _x6) {\n  return _doRequest.apply(this, arguments);\n}\n\nfunction _doRequest() {\n  _doRequest = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2(url, payload, token) {\n    var method,\n        connectionType,\n        headers,\n        request,\n        responseStream,\n        resp,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            method = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : 'POST';\n            console.log(method + ' - ' + url);\n            console.log(JSON.stringify(payload));\n            _context2.next = 5;\n            return NetInfo.getConnectionInfo();\n\n          case 5:\n            connectionType = _context2.sent;\n\n            if (!(connectionType.type == 'none')) {\n              _context2.next = 8;\n              break;\n            }\n\n            throw {\n              errorCode: 'no_connection'\n            };\n\n          case 8:\n            headers = {\n              'content-type': 'application/json'\n            };\n            if (token !== '') headers.Authorization = 'Bearer ' + token;\n            request = {\n              cache: 'no-cache',\n              method: method,\n              headers: headers\n            };\n            if (method !== 'GET') request.body = JSON.stringify(payload);\n            _context2.next = 14;\n            return fetch(url, request);\n\n          case 14:\n            responseStream = _context2.sent;\n\n            if (!(responseStream.status == 500)) {\n              _context2.next = 17;\n              break;\n            }\n\n            throw {\n              errorCode: 'server_error'\n            };\n\n          case 17:\n            if (!(responseStream.status == 401)) {\n              _context2.next = 19;\n              break;\n            }\n\n            throw {\n              responseStatus: 401,\n              errorCodes: 'Could not authenticate'\n            };\n\n          case 19:\n            if (!(responseStream.status === 204)) {\n              _context2.next = 21;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", {});\n\n          case 21:\n            _context2.next = 23;\n            return responseStream.json();\n\n          case 23:\n            resp = _context2.sent;\n\n            if (!(resp.hasOwnProperty('data') || responseStream.status === 200)) {\n              _context2.next = 26;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", resp);\n\n          case 26:\n            throw {\n              responseStatus: responseStream.status,\n              errorCodes: resp.hasOwnProperty('errors') ? resp.errors : ['unknown']\n            };\n\n          case 27:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, this);\n  }));\n  return _doRequest.apply(this, arguments);\n}\n\nexport function buildJsonPayload(type, attributes) {\n  var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var payload = {\n    data: {}\n  };\n  payload.data.type = type;\n  payload.data.attributes = attributes;\n  if (id) payload.data.id = id;\n  return payload;\n}\n\nvar unpack = function unpack(response) {\n  if (Array.isArray(response.data)) {\n    return {\n      links: response.links,\n      data: unpackResponseArray(response)\n    };\n  } else {\n    return unpackResponse(response);\n  }\n};\n\nexport var unpackResponse = function unpackResponse(response) {\n  var data = response.data.attributes;\n  data.jsonapi_identifier = response.data.id;\n  data.jsonapi_type = response.data.type;\n\n  if ('relationships' in response.data && 'included' in response) {\n    for (var key in response.data.relationships) {\n      var relation = response.data.relationships[key];\n\n      if (relation.data) {\n        (function () {\n          var _relation$data = relation.data,\n              id = _relation$data.id,\n              type = _relation$data.type;\n          data[key + 'Data'] = {};\n          data[key + 'Data']['id'] = id;\n          data[key + 'Data']['type'] = type;\n          var relatedObj = response.included.find(function (item) {\n            return item.id === id && item.type === type;\n          });\n          data[key + 'Data']['data'] = relatedObj && relatedObj.attributes;\n        })();\n      }\n    }\n  }\n\n  return data;\n};\nexport var unpackResponseArray = function unpackResponseArray(response) {\n  var responseData = response.data;\n  var items = [];\n\n  for (index in responseData) {\n    var data = {\n      data: responseData[index]\n    };\n\n    if ('included' in response) {\n      data.included = response.included;\n    }\n\n    items.push(unpackResponse(data));\n  }\n\n  return items;\n};","map":{"version":3,"sources":["/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/src/api/Api.js"],"names":["request","url","payload","method","doRequest","token","response","unpack","console","log","JSON","stringify","NetInfo","getConnectionInfo","connectionType","type","errorCode","headers","Authorization","cache","body","fetch","responseStream","status","responseStatus","errorCodes","json","resp","hasOwnProperty","errors","buildJsonPayload","attributes","id","data","Array","isArray","links","unpackResponseArray","unpackResponse","jsonapi_identifier","jsonapi_type","key","relationships","relation","relatedObj","included","find","item","responseData","items","index","push"],"mappings":"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","sourcesContent":["export async function request(url, payload, method) {\n    const response = await doRequest(url, payload, token, method);\n    return unpack(response);\n}\n\nasync function doRequest(url, payload, token, method = 'POST') {\n    console.log(method + ' - ' + url);\n    console.log(JSON.stringify(payload));\n\n    const connectionType = await NetInfo.getConnectionInfo();\n\n    if (connectionType.type == 'none') {\n        throw {\n            errorCode: 'no_connection'\n        }\n    }\n\n    const headers = { 'content-type': 'application/json' }\n    if (token !== '') headers.Authorization = 'Bearer ' + token\n\n    const request = {\n        cache: 'no-cache',\n        method: method,\n        headers: headers\n    }\n\n    if (method !== 'GET') request.body = JSON.stringify(payload);\n\n    const responseStream = await fetch(url, request)\n\n    if (responseStream.status == 500) {\n        throw {\n            errorCode: 'server_error'\n        }\n    }\n\n    if (responseStream.status == 401) {\n        //Auth failed\n        throw {\n            responseStatus: 401,\n            errorCodes: 'Could not authenticate'\n        }\n    }\n\n    //successful no body\n    if (responseStream.status === 204) {\n        return {}\n    }\n\n    const resp = await responseStream.json()\n    if (resp.hasOwnProperty('data') || responseStream.status === 200) {\n        return resp\n    }\n\n    throw {\n        responseStatus: responseStream.status,\n        errorCodes: resp.hasOwnProperty('errors') ? resp.errors :  ['unknown']\n    }\n}\n\nexport function buildJsonPayload (type, attributes, id=null) {\n    let payload = { data: {} };\n    payload.data.type = type;\n    payload.data.attributes = attributes;\n    if (id) payload.data.id = id;\n\n    return payload;\n}\n\nconst unpack = (response) => {\n    if (Array.isArray(response.data)) {\n        return {\n            links: response.links,\n            data: unpackResponseArray(response)\n        };\n    } else {\n        return unpackResponse(response);\n    }\n}\n\nexport const unpackResponse = (response) => {\n    let data = response.data.attributes\n    data.jsonapi_identifier = response.data.id\n    data.jsonapi_type = response.data.type\n\n    if ('relationships' in response.data && 'included' in response) {\n        for(let key in response.data.relationships) {\n            const relation = response.data.relationships[key]\n\n            if (relation.data) {\n                const { id, type } = relation.data\n\n                data[key+'Data'] = {}\n                data[key+'Data']['id'] = id\n                data[key+'Data']['type'] = type\n\n                const relatedObj = response.included.find(function(item) {\n                    return item.id === id && item.type === type\n                })\n\n                data[key+'Data']['data'] = relatedObj && relatedObj.attributes\n            }\n        }\n    }\n\n    return data\n}\n\nexport const unpackResponseArray = (response) => {\n    const responseData = response.data\n    let items = []\n\n    for(index in responseData) {\n        const data = {\n            data: responseData[index],\n        }\n        if ('included' in response) {\n            data.included = response.included\n        }\n        items.push(unpackResponse(data))\n    }\n\n    return items\n}\n"]},"metadata":{},"sourceType":"module"}