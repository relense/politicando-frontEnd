{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from './actionTypes';\nexport function changeView(view) {\n  debugger;\n  return {\n    type: types.SET_VIEW,\n    view: view\n  };\n}\nexport var asyncChangeView = function asyncChangeView(view) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                try {\n                  dispatch(changeView(view));\n                } catch (error) {\n                  console.log(error);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/src/actions/viewActions.js"],"names":["types","changeView","view","type","SET_VIEW","asyncChangeView","dispatch","error","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AAEA,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AAC/B;AACA,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACI,QADP;AAELF,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID;AAED,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACH,IAAD,EAAU;AACvC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAeI,QAAf;AAAA;AAAA;AAAA;AAAA;AACL,oBAAI;AACFA,kBAAAA,QAAQ,CAACL,UAAU,CAACC,IAAD,CAAX,CAAR;AACD,iBAFD,CAEE,OAAMK,KAAN,EAAa;AACbC,kBAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AALI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,CARM","sourcesContent":["import * as types from './actionTypes';\n\nexport function changeView(view) {\n  debugger\n  return {\n    type: types.SET_VIEW,\n    view\n  };\n}\n\nexport const asyncChangeView = (view) => {\n  return async function(dispatch) {\n    try {\n      dispatch(changeView(view))\n    } catch(error) {\n      console.log(error)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}