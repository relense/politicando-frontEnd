{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from './actionTypes';\nimport { apiUrls } from '../api/apiUrls';\nimport { get } from '../api/Api';\nexport function receivedArticles(articles) {\n  return {\n    type: types.FETCH_ARTICLES,\n    all_articles: articles\n  };\n}\nexport var loadArticles = function loadArticles() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return get(apiUrls.getNews);\n\n              case 3:\n                response = _context.sent;\n                dispatch(receivedArticles(response));\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/src/actions/articlesActions.js"],"names":["types","apiUrls","get","receivedArticles","articles","type","FETCH_ARTICLES","all_articles","loadArticles","dispatch","getNews","response","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,QAA1B,EAAoC;AACvC,SAAO;AACHC,IAAAA,IAAI,EAAEL,KAAK,CAACM,cADT;AAEHC,IAAAA,YAAY,EAAEH;AAFX,GAAP;AAIH;AAED,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEwBP,GAAG,CAACD,OAAO,CAACS,OAAT,CAF3B;;AAAA;AAEOC,gBAAAA,QAFP;AAGCF,gBAAAA,QAAQ,CAACN,gBAAgB,CAACQ,QAAD,CAAjB,CAAR;AAHD;AAAA;;AAAA;AAAA;AAAA;AAKCC,gBAAAA,OAAO,CAACC,GAAR;;AALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQH,CATM","sourcesContent":["import * as types from './actionTypes';\nimport { apiUrls } from '../api/apiUrls';\nimport { get } from '../api/Api';\n\nexport function receivedArticles(articles) {\n    return {\n        type: types.FETCH_ARTICLES,\n        all_articles: articles\n    }\n}\n\nexport const loadArticles = () => {\n    return async function(dispatch){\n        try {\n            const response = await get(apiUrls.getNews)\n            dispatch(receivedArticles(response))\n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}