{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from './actionTypes';\nimport { apiUrls } from '../api/apiUrls';\nimport { get } from '../api/Api';\nexport function receiveParties(parties) {\n  return {\n    type: types.RECEIVE_PARTIES,\n    parties: parties\n  };\n}\nexport var loadParties = function loadParties() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return get(apiUrls.getParties);\n\n              case 3:\n                response = _context.sent;\n                dispatch(receiveParties(response));\n                _context.next = 10;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/src/actions/partiesActions.js"],"names":["types","apiUrls","get","receiveParties","parties","type","RECEIVE_PARTIES","loadParties","dispatch","getParties","response","console","log"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,OAAO,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAEL,KAAK,CAACM,eADP;AAELF,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID;AAED,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC/B;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEoBN,GAAG,CAACD,OAAO,CAACQ,UAAT,CAFvB;;AAAA;AAEGC,gBAAAA,QAFH;AAIHF,gBAAAA,QAAQ,CAACL,cAAc,CAACO,QAAD,CAAf,CAAR;AAJG;AAAA;;AAAA;AAAA;AAAA;AAMHC,gBAAAA,OAAO,CAACC,GAAR;;AANG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AASD,CAVM","sourcesContent":["import * as types from './actionTypes';\nimport { apiUrls } from '../api/apiUrls';\nimport { get } from '../api/Api';\n\nexport function receiveParties(parties) {\n  return {\n    type: types.RECEIVE_PARTIES,\n    parties\n  };\n}\n\nexport const loadParties = () => {\n  return async function(dispatch) {\n    try {\n      const response = await get(apiUrls.getParties);\n\n      dispatch(receiveParties(response))\n    } catch(error) {\n      console.log(error)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}