{"ast":null,"code":"import * as types from './actionTypes';\n\nfunction url() {\n  return 'http://localhost:4000/partidos';\n}\n\nexport function receiveParties(json) {\n  return {\n    type: types.RECEIVE_PARTIES,\n    parties: json.parties\n  };\n}\nexport function fetchParties() {\n  return function (dispatch) {\n    return fetch(url(), {\n      method: 'GET',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      debugger;\n      response.json();\n    }).then(function (json) {\n      return dispatch(receiveParties(json));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/miguelfurtado/Documents/Projetos/politicando/policando-frontend/src/actions/partiesActions.js"],"names":["types","url","receiveParties","json","type","RECEIVE_PARTIES","parties","fetchParties","dispatch","fetch","method","mode","headers","then","response"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,eAAvB;;AAEA,SAASC,GAAT,GAAe;AACb,SAAO,gCAAP;AACD;;AAED,OAAO,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AACnC,SAAO;AAAEC,IAAAA,IAAI,EAAEJ,KAAK,CAACK,eAAd;AAA+BC,IAAAA,OAAO,EAAEH,IAAI,CAACG;AAA7C,GAAP;AACD;AAED,OAAO,SAASC,YAAT,GAAwB;AAC7B,SAAO,UAAAC,QAAQ,EAAI;AACjB,WAAOC,KAAK,CAACR,GAAG,EAAJ,EAAQ;AAClBS,MAAAA,MAAM,EAAE,KADU;AAElBC,MAAAA,IAAI,EAAE,SAFY;AAGlBC,MAAAA,OAAO,EAAE;AACP,kBAAU,kBADH;AAEP,wBAAgB;AAFT;AAHS,KAAR,CAAL,CASNC,IATM,CASD,UAAAC,QAAQ,EAAI;AAChB;AACAA,MAAAA,QAAQ,CAACX,IAAT;AACD,KAZM,EAaNU,IAbM,CAaD,UAAAV,IAAI;AAAA,aAAIK,QAAQ,CAACN,cAAc,CAACC,IAAD,CAAf,CAAZ;AAAA,KAbH,CAAP;AAcD,GAfD;AAgBD","sourcesContent":["import * as types from './actionTypes';\n\nfunction url() {\n  return 'http://localhost:4000/partidos';\n}\n\nexport function receiveParties(json) {\n  return { type: types.RECEIVE_PARTIES, parties: json.parties };\n}\n\nexport function fetchParties() {\n  return dispatch => {\n    return fetch(url(), {\n      method: 'GET',\n      mode: 'no-cors',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n\n      }\n    })\n    .then(response => {\n      debugger\n      response.json();\n    })\n    .then(json => dispatch(receiveParties(json)));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}